{{- if .Values.rainbow.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rainbow
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{ include "dsc.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: rainbow
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rainbow
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: default
      initContainers:
        {{- if (eq .Values.rainbow.ccs.enabled true) }}
        # -- curl container to register at the credentials config service
        - name: register-credential-config
          image: quay.io/curl/curl:8.1.2
          command: [ "/bin/sh", "-c", "/bin/init.sh" ]
          volumeMounts:
            - name: ccs-registration
              mountPath: /bin/init.sh
              subPath: init.sh
        {{- end }}
        - name: rainbow-init
          imagePullPolicy: Always
          image: quay.io/wi_stefan/rainbow:latest
          args: [ "provider", "setup" ]
          env:
            - name: DB_URL
              value: {{ .Values.rainbow.db.url }}
            - name: DB_USER
              value: {{ .Values.rainbow.db.user }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rainbow.db.existingSecret }}
                  key: {{ .Values.rainbow.db.passwordKey }}
            - name: DB_DATABASE
              value: rainbow
            - name: DB_TYPE
              value: postgres
            - name: DB_PORT
              value: "5432"
      containers:
        - name: rainbow
          imagePullPolicy: Always
          image: quay.io/wi_stefan/rainbow:latest
          args: [ "provider", "start" ]
          env:
            - name: DB_URL
              value: {{ .Values.rainbow.db.url }}
            - name: DB_USER
              value: {{ .Values.rainbow.db.user }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rainbow.db.existingSecret }}
                  key: {{ .Values.rainbow.db.passwordKey }}
            - name: DB_DATABASE
              value: rainbow
            - name: DB_TYPE
              value: postgres
            - name: DB_PORT
              value: "5432"
            - name: HOST_URL
              value: "0.0.0.0"
          ports:
            - containerPort: 1234
              name: http
      {{- if .Values.rainbow.ccs.configMap }}
      volumes:
        - name: ccs-registration
          configMap:
            name: {{ .Values.rainbow.ccs.configMap }}
            defaultMode: 0755
      {{- end }}
{{- end }}