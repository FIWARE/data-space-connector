{{- if .Values.keycloak.realm.import }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.keycloak.realm.name }}-realm
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{ include "dsc.labels" . | nindent 4 }}
data:
  {{ .Values.keycloak.realm.name }}-realm.json: |-
    {
      "id": "{{ .Values.keycloak.realm.name }}",
      "realm": "{{ .Values.keycloak.realm.name }}",
      "displayName": "Keycloak",
      "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
      "verifiableCredentialsEnabled": true,
      "enabled": true,
      "attributes": {
        "frontendUrl": "{{ .Values.keycloak.realm.frontendUrl }}",
        {{- if eq .Values.elsi.enabled  true }}
        "issuerDid": {{ .Values.elsi.did | quote }}
        {{- else if .Values.keycloak.signingKey }}
        "issuerDid": {{ .Values.keycloak.signingKey.did | quote }}
        {{- else }}
        "issuerDid": "${DID}"
        {{- end }}
        {{- if .Values.keycloak.realm.attributes }}
        ,
        {{ .Values.keycloak.realm.attributes | nindent 8 }}
        {{- end }}
      },
      "sslRequired": "none",
      "roles": {
        "realm": [
          {
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "test-realm",
            "attributes": {}
          },
          {
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "test-realm",
            "attributes": {}
          },
          {
            "name": "user",
            "description": "User privileges",
            "composite": false,
            "clientRole": false,
            "containerId": "test-realm",
            "attributes": {}
          },
          {
            "name": "default-roles-test-realm",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "view-profile",
                  "manage-account"
                ]
              }
            },
            "clientRole": false,
            "containerId": "test-realm",
            "attributes": {}
          }
        ],
        "client": {
          {{ .Values.keycloak.realm.clientRoles | nindent 10 }}
        }
      },
      "groups": [
        {
          "name": "admin",
          "path": "/admin",
          "realmRoles": [
            "user",
            "default-roles-test-realm"
          ]
        },
        {
          "name": "consumer",
          "path": "/consumer",
          "realmRoles": [
            "user",
            "default-roles-test-realm"
          ]
        }
      ],
      "users": [
        {{ .Values.keycloak.realm.users | nindent 8 }}
      ],
      "clients": [
        {{ .Values.keycloak.realm.clients | nindent 8 }}
      ],
      "clientScopes": [
        {
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            },
            {
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "String"
              }
            },
            {
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "e5d1174a-317e-4ce5-aa52-b95613efed01",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        }
        {{- if .Values.keycloak.realm.clientScopes }}
        ,
        {{ .Values.keycloak.realm.clientScopes | nindent 8 }}
        {{- end }}
      ],
      "defaultDefaultClientScopes": [
        "acr",
        "roles",
        "role_list",
        "email",
        "web-origins",
        "profile"
      ],
      "defaultOptionalClientScopes": [
        "oid4vc_user_scope",
        "microprofile-jwt",
        "phone",
        "address",
        "offline_access"
      ],
      "components": {
        "org.keycloak.protocol.oid4vc.issuance.credentialbuilder.CredentialBuilder": [
          {
            "id": "sd-jwt-builder",
            "name": "sd-jwt-builder",
            "providerId": "vc+sd-jwt"
          },
          {
            "id": "jwt-vc-builder",
            "name": "jwt-vc-builder",
            "providerId": "jwt_vc"
          } 
        ],
        
        {{- if eq .Values.elsi.enabled  true }}
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "a4589e8f-7f82-4345-b2ea-ccc9d4366600",
            "name": {{ .Values.elsi.keyAlias | quote }},
            "providerId": "java-keystore",
            "subComponents": {},
            "config": {
              "keystore": [ {{ .Values.elsi.storePath | quote }} ],
              "keystorePassword": [ {{ .Values.elsi.storePassword | quote }} ],
              "keyAlias": [ {{ .Values.elsi.keyAlias | quote }} ],
              "keyPassword": [ {{ .Values.elsi.keyPassword | quote }} ],
              "kid": [ {{ .Values.elsi.did | quote }} ],
              "active": [
                "true"
              ],
              "priority": [
                "0"
              ],
              "enabled": [
                "true"
              ],
              "algorithm": [
                {{ .Values.elsi.keyAlgorithm | quote }}
              ]
            }
          }
        ]
        {{- else if .Values.keycloak.signingKey }}
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "a4589e8f-7f82-4345-b2ea-ccc9d4366600",
            "name": "signing-key",
            "providerId": "java-keystore",
            "subComponents": {},
            "config": {
              "keystore": [ {{ .Values.keycloak.signingKey.storePath | quote }} ],
              "keystorePassword": [ {{ .Values.keycloak.signingKey.storePassword | quote }} ],
              "keyAlias": [ {{ .Values.keycloak.signingKey.keyAlias | quote }} ],
              "keyPassword": [ {{ .Values.keycloak.signingKey.keyPassword | quote }} ],
              {{- if .Values.keycloak.signingKey.did }}
              "kid": [ {{ .Values.keycloak.signingKey.did | quote }} ],
              {{- else }}
              "kid": [ "${DID}" ],
              {{- end }}
              "active": [
                "true"
              ],
              "priority": [
                "0"
              ],
              "enabled": [
                "true"
              ],
              "algorithm": [
                {{ .Values.keycloak.signingKey.keyAlgorithm | quote }}
              ]
            }
          }
        ]
        {{ else }}
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "a4589e8f-7f82-4345-b2ea-ccc9d4366600",
            "name": "test-key",
            "providerId": "java-keystore",
            "subComponents": {},
            "config": {
              "keystore": [ "/did-material/cert.pfx" ],
              "keystorePassword": [ "${STORE_PASS}" ],
              "keyAlias": [ "didPrivateKey" ],
              "keyPassword": [ "${STORE_PASS}" ],
              "kid": [ "${DID}"],
              "active": [
                "true"
              ],
              "priority": [
                "0"
              ],
              "enabled": [
                "true"
              ],
              "algorithm": [
                "ES256"
              ]
            }
          }
        ]
        {{- end }}
      }
    }

{{- end }}