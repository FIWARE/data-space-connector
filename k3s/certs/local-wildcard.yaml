apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIekNDQXdlZ0F3SUJBZ0lVUS9LOU14b3NidVgrVXJMM3k5ZTVZcFMrNWVVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2NURUxNQWtHQTFVRUJoTUNSRVV4RHpBTkJnTlZCQWdNQmxOaGVHOXVlVEVUTUJFR0ExVUVDZ3dLUmtsRApUMFJGVXlCRFFURWRNQnNHQTFVRUF3d1VSa2xEVDBSRlV5MUpUbFJGVWsxRlJFbEJWRVV4SFRBYkJna3Foa2lHCjl3MEJDUUVXRG1OaFFHWnBZMjlrWlhNdVkyOXRNQjRYRFRJMU1EZ3lPREV4TkRrd01Wb1hEVE13TURneU56RXgKTkRrd01Wb3dnWUF4Q3pBSkJnTlZCQVlUQWtKRk1SRXdEd1lEVlFRSURBaENVbFZUVTBWTVV6RVJNQThHQTFVRQpCd3dJUW5KMWMzTmxiSE14SGpBY0JnTlZCQW9NRlVaaGJtTjVJRTFoY210bGRIQnNZV05sSUVOdkxqRUxNQWtHCkExVUVDd3dDU1hReEhqQWNCZ05WQkFNTUZXWmhibU41TFcxaGNtdGxkSEJzWVdObExtSnBlakJaTUJNR0J5cUcKU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkhFZ2VpYWhaR2pFMDJTdlkwSHdTM2oyLzZhVGtsS3BHeHBuQnhkWAphVFQ0TTc5b2xyOTZsclNva1MvRTAwNlJHbW1ZWS9rMUI4WW5IVngwWEd3SENGYWpnZ0ZvTUlJQlpEQ0JuZ1lJCkt3WUJCUVVIQVFNRWdaRXdnWTR3Q0FZR0JBQ09SZ0VCTURnR0JnUUFqa1lCQlRBdU1Dd1dJV2gwZEhCek9pOHYKWlhoaGJYQnNaUzV2Y21jdmNHdHBaR2x6WTJ4dmMzVnlaUk1IWlhoaGJYQnNaVEFoQmdZRUFJR1lKd0l3Rnd3TQpVMjl0WlNCMFpYTjBJRU5CREFkWVdDMUVSbE5CTUNVR0JnUUFqa1lCQmpBYkJnY0VBSTVHQVFZQkJnY0VBSTVHCkFRWUNCZ2NFQUk1R0FRWURNQXNHQTFVZER3UUVBd0lEdURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3VlFZRFZSMFJCRTR3VElJU0tpNHhNamN1TUM0d0xqRXVibWx3TG1sdmdoVm1ZVzVqZVMxdApZWEpyWlhSd2JHRmpaUzVpYVhxQ0NYZGhiR3hsZEM1cGI0SVVjSEp2ZG1sa1pYSXRkbVZ5YVdacFpYSXVhVzh3CkhRWURWUjBPQkJZRUZLU3FIUFI4QzNROWtLd0VqekxCZENzZHd2RUdNQjhHQTFVZEl3UVlNQmFBRkYvV2RyY1oKbTVKTDQvcWp2NkV1S0F0YzRXamNNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUFTVTFUS0R0VWhvd0VNcllyLwo4MkU0WW05enpEWXI3b2dDUm52MWF5elVRWUsxSVVJc3dyd0RGdTVtVmN1UzcyTXFDdzR5bWlYaytCNXVFOWNTCkM4cGNnUUpSVC9YT1E0bTBSYXd3SjdTVXY5WkpudVNVK2pwVURIWGRhbTc5UU9jUStEMkxNVFFGeDNYL3FjaWUKTzdOY003U3J6RVJyT25KanpkeE8xSmZaUlJoYjB3MmJxbnpUSFVlUzNzRnRSN0ZBQWYrNGJDU3htdDkvZEFCbgp5YkpHN1VveDd4ZGVpU0srM0xlRG5zdkMvS0g1ME9WVFRsblZTUFk1c2dYMzZjdDI5Zkp2ZzlHc3NFWVhZTFBECjY5ZW0wUU5wOE04ZXFFY1ZOL0RXKzZEUk1ibm50SzAya0VmWFVLdzcyUlJDZk1aQjBuTTBOaGJBV2FMWXlaeGkKaEJ5a3V4NmtuRTdxbVJNdE4rckdLbkd0cXhrOGtJejhMWmhRWWlmL0xRY1Y5c01CS1VJRjVmVlc4c0NESXQvMgpwK1hyWlpBQWYwTVhGamxtNEFNVVhCZjU1L1R2ZGw1SnZxR1JoK3hrNStJclB4NmhHRWZsNThNd2pjM01pbk9jCnhiMlQwMlBuckN1S0Q2amZmUUtxS3hYUW4wVU5QYTBvS2xkOHBTUC8yRk9KMlZ5WTRKeU42Mk14N1J1YkZLVUMKNTFpcHo5UlZqZVo2K2lyTUpNOWptTnJoejVQVjU1c0YrZFJFWFRVNmZxVGlaaHJXQi9OYTFuK1BINktoMDhZVApyVkNyREZaYW95aWc0Ti9DcXUwQ3E2Q1FCRFZxcTVPWnduYS9JbXl2M2hhY0ZETE9zeGxSSUhxenVtazhERFU0CjlURTV4cTh6WHVMVDNSclpyM1VQallZVWFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRnVUQ0NBNkdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQm5NUXN3Q1FZRFZRUUdFd0pFUlRFUApNQTBHQTFVRUNBd0dVMkY0YjI1NU1SQXdEZ1lEVlFRSERBZEVjbVZ6WkdWdU1STXdFUVlEVlFRS0RBcEdTVU5QClJFVlRJRU5CTVJNd0VRWURWUVFEREFwR1NVTlBSRVZUTFVOQk1Rc3dDUVlEVlFRRkV3SXdNVEFlRncweU5UQTQKTWpnd09UQTFORE5hRncwek1qRXhNamt3T1RBMU5ETmFNSEV4Q3pBSkJnTlZCQVlUQWtSRk1ROHdEUVlEVlFRSQpEQVpUWVhodmJua3hFekFSQmdOVkJBb01Da1pKUTA5RVJWTWdRMEV4SFRBYkJnTlZCQU1NRkVaSlEwOUVSVk10ClNVNVVSVkpOUlVSSlFWUkZNUjB3R3dZSktvWklodmNOQVFrQkZnNWpZVUJtYVdOdlpHVnpMbU52YlRDQ0FpSXcKRFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCQU1Ka083WDJuR0txTUhOMGN6K0wrWXZQWTNHMwpDZ25nK3JtcXUrSzgrdkl5SG1YaVVmNCtLTWhjWFM2ZkJVSU55cFBxb21HM1NXZGhTRVpNUzVrN3U1VURJZG1WCkkrNnNNeXBSR0dzMU1ieXJDS3A4RGtGNlJnSVNBc3VnUDAwbjZtMHo2QmZUNWRWUTJsSmxnSGE2c2FVV0dLbzIKWEFUV0sxZnpIYXhSNTJaQUZ1aktBVU14TngxRVRuOEwyZGVxc2U5Y3hkVE03VWRaKzJVOUJ2dmxvTjczR0hNSQpVanQwR3VvTG1kUWR1VGs0UDEwbkRhU1gzT2Jsd3U0cFQ2cktiYjRhdUY0MFplbzMzZkYvRVFkZXViQmxna0U3CjlqeFlSS09rN1JYMGlPZVJ6b1pjYWtUdjNWY1JYWGRHUjlvNlhnQTc4TEk5UERqdGhSUXM0ODlvVXJXZG4rRC8KMmt1ekpJL2IrRkdKWTVGZml0VDcrWVJ0TjdFL3NobFVQdlJsbndoZUJOMkFMMTFhY1p0MXQ2ZWc3Q2NoSXJhWgp6K25NeWpnbE15UFRLdHl3em53TGdQMVdsdDNkMkE1bHFXd2hKNEFkVlBzNW11ek1nYTN5WDRUOFh3elduVW02Cjl4Nk0zOHhkZ25aQXhURGxwblVXV3BmaEtSbVh6SzRuWnZ4MVdTL0lGMExBcXU1S0JHK1JxbUdmMld1UWlRanMKbk8rWnZWTzgzUEVZUlgxR3VpRnZYM2YvT1ZONEFTeS9rSTB6bzBTUjA2TXZWamtJM1YxdkJMdFY4NDUzcnFNdwpQMmV4cTFqQjV0ZHp0L0pPZlV5c0JYU21tZ3RZNlY2K1huenRJOVZ3dU5La1dMSU9xdnllUWp5dlN6Z2JVOWFpCnZ6RVZUbHVBUGRHYUpWdkRBZ01CQUFHalpqQmtNQjBHQTFVZERnUVdCQlJmMW5hM0dadVNTK1A2bzcraExpZ0wKWE9GbzNEQWZCZ05WSFNNRUdEQVdnQlNxdkxGajdSL0htVTh0K0tqZjAzN2tDcVY2ekRBU0JnTlZIUk1CQWY4RQpDREFHQVFIL0FnRUFNQTRHQTFVZER3RUIvd1FFQXdJQmhqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFhaFRyCnhYTENZTU5rd0s0V2w1N2lFTnRnNTF5Uyt0R2hRUkRaRHFzU2JPdDRYWjhKZ3pxRzliRWdvS3pCZk5DdGQwbXUKd0pHakZaSVdLc3Zlb2kwZWtVWnM5UnlwV1Q5R0M2dXh5eDhnZ3NDMGFnOXJ5aTRjSm1KemZBU1lnV0pWUVhEZApFbUl1VFpKNEpXUnpKWkJVR0xRcU41YjZzSUJSU2JHR1AvUkdtR0NYamZSK2hwR0p6WXdKVm9UcEErZHdON0tVCnVMNzFwMGJVeUhSRjA5OER4b24zWkdKOFAvV0VXM2FjNHFPbzdUc0hPWTVOZGlKN3hnR0tFbVVQZndIYjMySWIKT1g2eTh0MWNkbjdLTWdWN1gySEpZVHBEeVMzQ3UwdG5ENjRQaUVnVnBnN2tOY0h6b0VmZ2xFcTZQVkdnc3ducwptRXFMNjFtSDRMRllvS2JqNmVHbXFTcEhUOExTL1hnUEhtZVhEUWRQYWJDMEdjOHNWRHd4RmI0R3hLYWlOVXlrCmtlVE9WU29QbktOVGgxNFpRN3dDSXJMem5UMUo5SDg3aGkybzlEUjhDNm5KYlk5UEhsYm5rUTZMbGtUM1RIUVYKQ3ZrUDdKWHcrNDZpR0x2d0hES2xYODBzejlJeGFQcU0yZ0M2ZHFSeU12VXEvSm9PV1NZTmNCZlRwQXhGS2JwaQpIL3JEcHZIZDBDL3pqdEdmOHQ3aXc4RGtBOWQzMzMxYjA1QXhRQWpWdnl3Y2V3MVlsTHR5ZmNSVGpuUXNZZmR5CjNuMHZYUk9lL0dJd2liQy9GbXNJQnpHTFlIMC9HZi9nbEd1cDdyeUphMFBsU01qSkkzZmtZQUJXeC9RYVRQQUYKSHZIOVhwWXBNMC95OERCZTZ4eWV3SjRnWUthY3NZTkpJSkFBai9BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGbkRDQ0E0U2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURCbk1Rc3dDUVlEVlFRR0V3SkVSVEVQCk1BMEdBMVVFQ0F3R1UyRjRiMjU1TVJBd0RnWURWUVFIREFkRWNtVnpaR1Z1TVJNd0VRWURWUVFLREFwR1NVTlAKUkVWVElFTkJNUk13RVFZRFZRUUREQXBHU1VOUFJFVlRMVU5CTVFzd0NRWURWUVFGRXdJd01UQWVGdzB5TlRBNApNamd3T1RBMU5ETmFGdzB6TlRBNE1qWXdPVEExTkROYU1HY3hDekFKQmdOVkJBWVRBa1JGTVE4d0RRWURWUVFJCkRBWlRZWGh2Ym5reEVEQU9CZ05WQkFjTUIwUnlaWE5rWlc0eEV6QVJCZ05WQkFvTUNrWkpRMDlFUlZNZ1EwRXgKRXpBUkJnTlZCQU1NQ2taSlEwOUVSVk10UTBFeEN6QUpCZ05WQkFVVEFqQXhNSUlDSWpBTkJna3Foa2lHOXcwQgpBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF0ZDJTc3laMzUza1gwK211MnJyc1NEaERjZHdMRGwxbmU2WkZHU0l0CjBFdGhrbStNQ25ManUwc3VnQ3I0K291eVlKdmhscGRlY3ZpQ3JIZlh4SjE0TkUxR2R1dlgwMzZpU2NXNVFkMDgKa0FZcU90dmpFd3RITkV2Q1RjNUFzV3orYU5uUXM4cnhXNmVpNXl1cGFuZHlqa1pXZFBhc0d2dG1tTWs0UUw3KwpxWFpTdDRWRlJUNUFzeURFMk5xZnRFWFdGSFZNTGFqVnBQdWlWZDU3dHk3RUlheGZkTnJYUVB5Ykc1TUhNSGE1CjVndm5oaGdsMUdwUWw2N1R0NUp4S2t3bldHZzRwSlIvN0ZKZTZaZ2g3MW9maVhackZVUUFQeEJRUUJPV3poV2QKQUR6bVZrdVIzeVNyWG1lK3B1a2VadHdlcnN0blVFOWQ3dzgwK3Y1MDFpKzdUcUpnOXVTL2dSVHVwZGRLUnVReQpJeGQyR0RmM05KZ2swbTRhckhvQXF6enBGTUJDeER1L0MxRDBrY2JHY0FhTGtTMTg1MURKRU5sM0FXazdJTElzCkxYby9QMU9ET2k3c2w3bkZyNzJTRzBvOUtKVGQxRjl5YXZIVDBzV1VKU2duKzlidmNkWjVUYnVBcks3Y0dlb3YKcmJoMHRnWlU1YWZuTTdGRzcrWGpFRFVuSG53eWl0OGJtdWY3MGFjYkVsTXRMb1E2ZXFqZ2ZzalY0RngydXBvdQp2ekcrS1FvRWZKM2JvcGxHNVB3Vm5Sb0ZCbENHTjhTektzYStzWkthVjVpS21Edm56SisrSE9EQkNpNFloSDlMClFjeHVWZ0JMRjNnNmtVZ09BTkdaRmV3ZGJ0QkdCNG5IQXJ0cytRU01NVU10QnFHc0paWVo2QVg5cXMrbFZtM3AKLzJrQ0F3RUFBYU5UTUZFd0hRWURWUjBPQkJZRUZLcThzV1B0SDhlWlR5MzRxTi9UZnVRS3BYck1NQjhHQTFVZApJd1FZTUJhQUZLcThzV1B0SDhlWlR5MzRxTi9UZnVRS3BYck1NQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0lCQUlDb0g0dHdYcmV1R3pmblBZVXRnMk9BMzFrWUMvNmlNdlgyakhUN212eVEKMlBGdkFaUTc2ays1d2ZvU0FnaUVLeWpQa3EranE0ZzNhWXh4WmhTYWhmT2k1UEVrT2doSEYxZnFDaVRnN2h1RQpvOWMzZXZoUHdpTzRPeDZFZm9OdjFVV1E5NGh2cS9SYklpSUlRWmpoQmg2bnlKUmYxdXY5MlBtNEJrZXNlckNxCnN6elliSzI1aDJlckdySWpTWHNJMU5VcUhvUEl0dkt3dUNQZzNpb3g5MlBXNGZob1hnYmRqQ3lFYnc5Q0p3NEMKNUp1aytCNkRFU0dHYXdMTDFRMXVNajV3Z2FwRTlrUkd0a3ZFZy9qd3ZxL1lQakVmZXFtcDAxZDlvbEM5VGVzMwpTb2k2c1hUQ2FxMHhzMGNJRHJYaHloN1BkcFBsMTNHM09WQlNSS04xZWdWTVRDRkNXakM3aW9odlF0Q29jYyt1CmY1YkhvUVZDM3lneHd1N3BEZElQRnJTWDFaNm9oS1pXYkNnRFdHZ1gzWjNrWEtPTjJtM2xGVXkwb21hVENkUkoKV1Q5Y1dOVjVSNU9VTnBIcWlxOXMyVnp1Y1huZ0hLSlhyWHM2Wm5rem9JODdBZkY0OWMzYlRHZldmRUtiN1g4RgpkekFRbG40ampQaC95MDRjL1h5T2hoeU5CQmZwb1RsK29GOXhzcHZ6SllKWjBwbEREYTZKQjJpbnVLQnBjbGp0CmhTQTJaUmtBVXdJU25sbnNVRVB2R2RjeEV3dHFSUGVYMjlScnB3bisyekhUbHNaWHlPRENHSFBnM0hralRGbnkKS3NqWEQ1U2xDc1lYNVVnY1JLOTZic2dxTmxyZkhwWUk2YlNnYkllVll3OGpTVjFKRlZyYm5PWFk4VHVJUDEwNAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtRbGtucERab1d5OGl6eHF6akpDZUZ4NzhhdEJVNEkrSzNVaFJLQ05lRE9vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFY1NCNkpxRmthTVRUWks5alFmQkxlUGIvcHBPU1Vxa2JHbWNIRjFkcE5QZ3p2MmlXdjNxVwp0S2lSTDhUVFRwRWFhWmhqK1RVSHhpY2RYSFJjYkFjSVZnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  name: local-wildcard
  namespace: infra
type: kubernetes.io/tls
