vcverifier:
  enabled: false
credentials-config-service:
  enabled: false
trusted-issuers-list:
  enabled: false
mysql:
  enabled: false
odrl-pap:
  enabled: false
apisix:
  enabled: false
scorpio:
  enabled: false
postgis:
  enabled: false
tm-forum-api:
  enabled: false
contract-management:
  enabled: false

postgresql:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false

keycloak:
  ingress:
    enabled: true
    hostname: keycloak-consumer.127.0.0.1.nip.io
  command:
    - /bin/bash
  args:
    - -ec
    - |
      #!/bin/sh
      export $(cat /did-material/did.env)
      export KC_HOSTNAME=keycloak-consumer.127.0.0.1.nip.io
      /opt/bitnami/scripts/keycloak/entrypoint.sh
      /opt/bitnami/scripts/keycloak/run.sh
  initContainers:
    - name: install-jades-issuer
      image: quay.io/fiware/keycloak-jades-vc-issuer:1.2.0
      imagePullPolicy: Always
      volumeMounts:
        - name: providers
          mountPath: /target

    - name: register-at-tir
      image: ubuntu
      command:
        - /bin/bash
      args:
        - -ec
        - |
          #!/bin/bash
          # source /did-material/did.env
          apt-get -y update; apt-get -y install curl
          curl -X 'POST' 'http://tir.trust-anchor.svc.cluster.local:8080/issuer' -H 'Content-Type: application/json' -d "{\"did\": \"did:elsi:VATDE-1234567\", \"credentials\": []}"
      volumeMounts:
        - name: did-material
          mountPath: /did-material

    - name: register-at-til
      image: quay.io/curl/curl:8.1.2
      command:
        - /bin/sh
      env:
        - name: DID
          value: "did:elsi:VATDE-1234567"
      args:
        - -ec
        - |
          #!/bin/sh
          /bin/init.sh
      volumeMounts:
        - name: consumer-til-registration
          mountPath: /bin/init.sh
          subPath: init.sh

  extraVolumeMounts:
    - name: elsi-trust-store
      mountPath: /trust-store
    - name: realms
      mountPath: /opt/bitnami/keycloak/data/import
    - name: providers
      mountPath: /opt/bitnami/keycloak/providers/

  extraVolumes:
    - name: did-material
      emptyDir: { }
    - name: realms
      configMap:
        name: test-realm-realm
    - name: consumer-til-registration
      configMap:
        name: consumer-til-registration
        defaultMode: 0755
    - name: elsi-trust-store
      secret:
        secretName: elsi-secret
        defaultMode: 0755
    - name: providers
      emptyDir: {}
  realm:
    frontendUrl: http://keycloak-consumer.127.0.0.1.nip.io:8080
    import: true
    name: test-realm
    clientRoles: |
      "${CLIENT_DID}": [
        {
          "name": "READER",
          "description": "Is allowed to see offers etc.",
          "clientRole": true
        },
        {
          "name": "OPERATOR",
          "description": "Is allowed to operate clusters.",
          "clientRole": true
        }
      ]

    users: |
      {
        "username": "test-user",
        "enabled": true,
        "email": "test@user.org",
        "firstName": "Test",
        "lastName": "Reader",
        "credentials": [
          {
            "type": "password",
            "value": "test"
          }
        ],
        "clientRoles": {
          "${CLIENT_DID}": [
            "OPERATOR"
          ],
          "account": [
            "view-profile",
            "manage-account"
          ]
        },
        "groups": [
        ]
      }
    clients: |
      {
        "clientId": "${CLIENT_DID}",
        "enabled": true,
        "description": "Client to connect test.org",
        "surrogateAuthRequired": false,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "defaultRoles": [],
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "oid4vc",
        "attributes": {
          "client.secret.creation.time": "1675260539",
          "vc.user-credential.format": "jwt_vc",
          "vc.user-credential.scope": "UserCredential",
          "vc.verifiable-credential.format": "jwt_vc",
          "vc.verifiable-credential.scope": "VerifiableCredential",
          "vc.operator-credential.format": "jwt_vc",
          "vc.operator-credential.scope": "OperatorCredential"
        },
        "protocolMappers": [
          {
            "name": "target-role-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-target-role-mapper",
            "config": {
              "subjectProperty": "roles",
              "clientId": "${CLIENT_DID}",
              "supportedCredentialTypes": "OperatorCredential"
            }
          },
          {
            "name": "context-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-context-mapper",
            "config": {
              "context": "https://www.w3.org/2018/credentials/v1",
              "supportedCredentialTypes": "VerifiableCredential,UserCredential,OperatorCredential"
            }
          },
          {
            "name": "email-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "email",
              "userAttribute": "email",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          },
          {
            "name": "firstName-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "firstName",
              "userAttribute": "firstName",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          },
          {
            "name": "lastName-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "lastName",
              "userAttribute": "lastName",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          }
        ],
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      }
did:
  enabled: false
  secret: issuance-secret
  serviceType: ClusterIP
  port: 3001
  cert:
    country: BE
    state: BRUSSELS
    locality: Brussels
    organization: Fancy Marketplace Co.
    commonName: www.fancy-marketplace.biz
  ingress:
    enabled: true
    host: did-consumer.127.0.0.1.nip.io

# register the consumer at the til. Only possible if it runs in the same environment and recommendable for demo deployments
registration:
  enabled: true
  configMap: consumer-til-registration
  til: http://trusted-issuers-list.provider.svc.cluster.local:8080
  did: ${DID}
  credentialsType: UserCredential

dss:
  enabled: false
  crl:
    enabled: false

elsi:
  enabled: true
  storePath: /trust-store/keystore.p12
  storePassword: password
  keyAlias: test-keystore
  keyPassword: password
  keyAlgorithm: RS256
  did: did:elsi:VATDE-1234567
  keystore:
    keystore.p12: 
