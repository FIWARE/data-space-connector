keycloak:
  enabled: false
apisix:
  image:
    debug: true
  dataPlane:
    ingress:
      enabled: true
      hostname: mp-data-service.127.0.0.1.nip.io
      extraHosts:
        - name: mp-tmf-api.127.0.0.1.nip.io
          path: /
  catchAllRoute:
    enabled: false
  routes: |-
    - uri: /.well-known/openid-configuration
      host: mp-data-service.127.0.0.1.nip.io
      upstream:
        nodes:
          verifier:3000: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /services/data-service/.well-known/openid-configuration
    - uri: /.well-known/data-space-configuration
      upstream:
        nodes:
          dsconfig:3002: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /.well-known/data-space-configuration/data-space-configuration.json
        response-rewrite:
          headers:
            set:
              content-type: application/json
    - uri: /*
      host: mp-data-service.127.0.0.1.nip.io
      upstream:
        nodes:
          data-service-scorpio:9090: 1
        type: roundrobin
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: data-service
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/data-service/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: policy/main
          with_body: true
    - uri: /.well-known/openid-configuration
      host: mp-tmf-api.127.0.0.1.nip.io
      upstream:
        nodes:
          verifier:3000: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /services/tmf-api/.well-known/openid-configuration
    - uri: /*
      host: mp-tmf-api.127.0.0.1.nip.io
      upstream:
        nodes:
          tm-forum-api:8080: 1
        type: roundrobin
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: contract-management
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/tmf-api/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: policy/main
          with_body: true
credentials-config-service:
  ingress:
    enabled: true
    hosts:
      - host: provider-ccs.127.0.0.1.nip.io
        paths:
          - "/"
vcverifier:
  ingress:
    enabled: true
    hosts:
      - host: provider-verifier.127.0.0.1.nip.io
        paths:
          - "/"
  deployment:
    logging:
      level: DEBUG
    verifier:
      tirAddress: http://tir.127.0.0.1.nip.io:8080/
      did: ${DID}
    server:
      host: http://provider-verifier.127.0.0.1.nip.io:8080
    configRepo:
      configEndpoint: http://credentials-config-service:8080
    alternativeConfig: /alternative-conf/server.yaml
    additionalVolumes:
      - name: did-material
        emptyDir: {}
      - name: alternative-conf
        emptyDir: {}
      - name: root-ca
        emptyDir: {}
      - name: ca-to-add
        secret:
          secretName: root-ca
    additionalVolumeMounts:
      - name: alternative-conf
        mountPath: /alternative-conf
      - name: root-ca
        mountPath: /etc/ssl/cert.pem
        subPath: cert.pem
    additionalEnvVars:
      - name: HTTPS_PROXY
        value: "http://squid-proxy.infra.svc.cluster.local:8888"
      - name: HTTP_PROXY
        value: "http://squid-proxy.infra.svc.cluster.local:8888"
      - name: NO_PROXY
        value: "credentials-config-service,w3.org,trusted-issuers-list"
    initContainers:
      - name: add-root-ca
        image: alpine:3.21.3
        command:
          - /bin/sh
        args:
          - -c
          - |
            #!/bin/sh
            cp /etc/ssl/cert.pem /root-ca/cert.pem
            cat /root-ca/cacert.pem >> /root-ca/cert.pem
        env:
          - name: CA_TO_ADD
            value: "-----BEGIN CERTIFICATE-----\nMIIFnDCCA4SgAwIBAgIBATANBgkqhkiG9w0BAQsFADBnMQswCQYDVQQGEwJERTEP\nMA0GA1UECAwGU2F4b255MRAwDgYDVQQHDAdEcmVzZGVuMRMwEQYDVQQKDApGSUNP\nREVTIENBMRMwEQYDVQQDDApGSUNPREVTLUNBMQswCQYDVQQFEwIwMTAeFw0yNTAy\nMjAwNzUwNDBaFw0zNTAyMTgwNzUwNDBaMGcxCzAJBgNVBAYTAkRFMQ8wDQYDVQQI\nDAZTYXhvbnkxEDAOBgNVBAcMB0RyZXNkZW4xEzARBgNVBAoMCkZJQ09ERVMgQ0Ex\nEzARBgNVBAMMCkZJQ09ERVMtQ0ExCzAJBgNVBAUTAjAxMIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAwJguJDSWVxpHqbnvdTpqkiQI9aoYG06ccR50iY2Y\nJye8sLCHQXhDZYfdGFPR65N2veKQPolYgk95DL2587V668VjfqzlBIRkOXj5UkJ5\n50pxCzaXItn52bBmsW9QqXAyIxYFn4f1pT95NVGj+sE23FfSAS3O0qq4yTL42Czn\nSvq378PXak/OaTOJQ+xOAprnnPepEadPDcqEUe5PGSwejJGQd654dUk+VoTdHBTU\njRPdg0FkGI+PB6dpZKhSoeePpvFBznG9R5amDx/COCVzFx1YwhHpbDGMwiNLJqeb\nExiGT5o2O4GugV5RTWRFYuKr1xSTAHiY+g3fCzhQZCD+NGGuaPbkjRGjptwiDpMR\n3CgnkdZh6BqeCpnSiI6tQYpJ9ms5xcCSeTsyf4hisCbawHqbDmCjsuXsMw0WP6VG\nnyYwJ1gwR/RHHe44+zfgv/U7hfULTIb8yi/n24a2FVV0kEAF79UUQGLW7364rXGY\njrIF8vhATZbGAMQiQh1MJMV0kcM8pmqUawDSvZ/llQMhr3OgMybZ2dAsakHVWU2I\nffABGupX3vTONzkpGVYwJIJ21T0QXTPrZgUMzPX/bH+3BHog0QjJ7T3sp0aG4AKT\nBmzYDaU9rIUs47S6TqxBXRQW4xyyy7XMQvXfbe4tExjUkgNfOHQ/5TUjUuBSfjwS\nKZkCAwEAAaNTMFEwHQYDVR0OBBYEFDqF7FNIKOPtvfO6hmhXV6H35l0TMB8GA1Ud\nIwQYMBaAFDqF7FNIKOPtvfO6hmhXV6H35l0TMA8GA1UdEwEB/wQFMAMBAf8wDQYJ\nKoZIhvcNAQELBQADggIBAJ+vbD/9ajM9lOkBqKw2b4wb3Hs7A9olUeBzhnEH5hRI\ncXK+2CYvXf4PHfSyPSy33bhCeTqyeWjDN0eBM76tVUNu92/ft2Vlch27CoJjvkAK\nWO/+YiakgjAVC0IftAvs2YvZ54I6uU1C0EmdE1FcvDWAedyCypcl4871r4M8a55k\nJYg2FpfqOBJMFn9yBW1EkJlTPzzobP1H0q+GKXIMTLvyGRWrpb90DXxJu1i4jdtZ\n36sn6bb6TtT4pUC4OuhDvQ1N/LEbzKVTfRYBoMnEdlooybgZFu5t4uE0AJUgsRWq\nqnlHx2OMMBhhid+qjzo6jXXzXtIn8NjlF/IrwrGO0YrekVTMqKH5sx+4rFF0BO8X\n74N/fwZMHR6p3Zps4D72rogNGhmjZDBSt4tPVARPhAUbWXhRTPB1NunHvwHutfRk\nbBnyjC0BtKoYTqgPLOB4pkdGuuZ6E4dCZfzIE2s98QvY/RBYTUk+D2cJBuVC93RN\nv5wlx0WS46TNRWW0XP+P6cgPbkG5owqTyihuUx4eTh3Rf19wU1W+0wGQDFQ69uLL\n1T3Tkpg9btk/mhTWz4tu62r6NgwibM3KrGEJk0/oLq0z5qe52KW1mMRzRTGIb6pn\nGbGH8xZo2lxZcHzLDWVadXTdryUPDiFE90yyv6tW3GxJTkoi0BIWjYz3Wmf8qieU\n-----END CERTIFICATE-----"
        volumeMounts:
          - name: root-ca
            mountPath: /root-ca
          - name: ca-to-add
            mountPath: /root-ca/cacert.pem
            subPath: cacert.pem
      - name: get-did
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            apt-get -y update; apt-get -y install wget; apt-get -y install gettext-base
            cd /did-material
            wget http://did-helper:3002/did-material/did.env
            export $(cat /did-material/did.env)
            cp /original-conf/server.yaml /alternative-conf/server.yaml
            envsubst < /alternative-conf/server.yaml
        volumeMounts:
          - name: did-material
            mountPath: /did-material
          - name: config-volume
            mountPath: /original-conf
          - name: alternative-conf
            mountPath: /alternative-conf
      - name: register-at-tir
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            source /did-material/did.env
            apt-get -y update; apt-get -y install curl
            curl -X 'POST' 'http://tir.trust-anchor.svc.cluster.local:8080/issuer' -H 'Content-Type: application/json' -d "{\"did\": \"${DID}\", \"credentials\": []}"
        volumeMounts:
          - name: did-material
            mountPath: /did-material
mysql:
  primary:
    persistence:
      enabled: false
  secondary:
    persistence:
      enabled: false
postgis:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false
postgresql:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false
did:
  enabled: true
  secret: issuance-secret
  serviceType: ClusterIP
  port: 3002
  cert:
    country: DE
    state: SAXONY
    locality: Dresden
    organization: M&P Operations Inc.
    commonName: www.mp-operation.org
  ingress:
    enabled: true
    host: did-provider.127.0.0.1.nip.io
dataSpaceConfig:
  enabled: true
  serviceType: ClusterIP
  port: 3002
  supportedModels:
    - "https://raw.githubusercontent.com/smart-data-models/dataModel.Consumption/master/ConsumptionPoint/schema.json"
    - "https://raw.githubusercontent.com/smart-data-models/dataModel.Consumption/master/ConsumptionCost/schema.json"
  supportedProtocols:
    - http
    - https
  authenticationProtocols:
    - oid4vp
scorpio:
  ingress:
    enabled: true
    # only to make it available for the test initialization
    hosts:
      - host: scorpio-provider.127.0.0.1.nip.io
        paths:
          - "/"
  ccs:
    defaultOidcScope:
      name: default
    oidcScopes:
      default:
        - type: UserCredential
          trustedParticipantsLists:
            - url: https://registry.127.0.0.1.nip.io
              type: gaia-x
          trustedIssuersLists:
            - http://trusted-issuers-list:8080
      operator:
        - type: OperatorCredential
          trustedParticipantsLists:
            - url: https://registry.127.0.0.1.nip.io
              type: gaia-x
          trustedIssuersLists:
            - http://trusted-issuers-list:8080
odrl-pap:
  deployment:
    initContainers:
      - name: get-did
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            apt-get -y update; apt-get -y install wget
            cd /did-material
            wget http://did-helper:3002/did-material/did.env
        volumeMounts:
          - name: did-material
            mountPath: /did-material
    additionalVolumes:
      - name: did-material
        emptyDir: {}
    additionalVolumeMounts:
      - name: did-material
        mountPath: /did-material
    command:
      - /bin/sh
    args:
      - -ec
      - |
        #!/bin/sh
        source /did-material/did.env
        export GENERAL_ORGANIZATION_DID=$DID
        ./application -Dquarkus.http.host=0.0.0.0
  ingress:
    enabled: true
    hosts:
      - host: pap-provider.127.0.0.1.nip.io
        paths:
          - "/"
tm-forum-api:
  registration:
    ccs:
      defaultOidcScope:
        credentialType: UserCredential
        trustedParticipantsLists: http://tir.trust-anchor.svc.cluster.local:8080
  ingress:
    enabled: true
    hosts:
      - host: tm-forum-api.127.0.0.1.nip.io
        paths:
          - /
contract-management:
  til:
    credentialType: OperatorCredential
trusted-issuers-list:
  # only open for clean up in the tests
  ingress:
    til:
      enabled: true
      hosts:
        - host: til-provider.127.0.0.1.nip.io
          paths:
            - /
